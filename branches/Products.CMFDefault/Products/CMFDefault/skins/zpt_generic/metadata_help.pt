<html metal:use-macro="context/main_template/macros/master">
<body>

<metal:slot metal:fill-slot="main" i18n:domain="cmf_default">
<h2 i18n:translate="">Dublin Core Metadata</h2>

<table>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Title" i18n:translate="">Title</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">the standard Zope 'title'
    attribute; we should look at making it mandatory for all PortalContent
    derivatives.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Creator" i18n:translate="">Creator</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">where possible, this should be
    one or more full names, of either persons or organizations. The current
    implementation finds the first user in the list returned
    by 'get_local_roles' who has the 'Owner' role;  userids are
    not considered appropriate for this field by the DCI.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Subject" i18n:translate="">Subject</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">this is supposed to be drawn
    from a controlled list of keywords (e.g., selected from a multi-select
    list used across the whole site).
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Description" i18n:translate="">Description</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">a short summary, an abstract,
    or a table-of-contents are all considered acceptable. We might
    look at making this required, as well, at least for some
    kinds of content.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Publisher" i18n:translate="">Publisher</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">a site-wide property, should be
    done through acquisition (do I smell a 'portal_metadata' tool about to
    appear?)  Again, this is supposed to be a formal name.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Contributor" i18n:translate="">Contributor</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">used to convey others besides
    the Creator who have contributed to the document (the current
    implementation aliases 'Creator', which is not what DCI intends).
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Date" i18n:translate="">Date</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">this one has modifiers, of
    which the approved set is:
    'Created', 'Valid', 'Available', 'Issued', and 'Modified'.
    I propose extending the interface to include CreationDate(),
    EffectiveDate(), ExpirationDate(), and ModificationDate().
    The current Date() could just return the CreationDate(), while
    the DCI 'Valid' and 'Available' would be ranges derived from
    EffectiveDate() and ExpirationDate().
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Type" i18n:translate="">Type</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">like the Zope 'meta_type', this
    is the main conceptual classification; 'meta_type' is often spelled
    identically to the class, which makes it less appropriate for the DCI
    usage.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Format" i18n:translate="">Format</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">the kind of physical
    representation, e.g., 'text/html'.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Identifier" i18n:translate="">Identifier</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">should be the fully-qualified
    URL of the document (the current implementation returns the object's id,
    which is only required to be unique within its container).
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Language" i18n:translate="">Language</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">'en-us', 'pt-br', 'de', etc.
    Should be set at creation, with an appropriate default (and a picklist of
    values).
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Source" i18n:translate="">Source</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">the original from which a piece
    of content is derived. I'd like to ignore this one.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Relation" i18n:translate="">Relation</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate=""> more relationships to other
    documents.  Again, I'd like to ignore it (ZopeStudio and other such tools
    need this, however, to build site maps).
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Coverage" i18n:translate="">Coverage</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">
    geographic/chronological/jurisdictional scope. Again, ignore.
  </td>
 </tr>

 <tr>
  <td colspan="2" class="ListName">
   <strong><a name="Rights" i18n:translate="">Rights</a></strong>
  </td>
 </tr>
 <tr>
  <td>&nbsp;  </td>
  <td class="ListDefinition" i18n:translate="">copyright and other IP
    information related to the document. Most portals should care about this:
    witness the brouhaha on Slashdot over the compilation of the
    Hellmouth postings into a book.
  </td>
 </tr>

</table>
</metal:slot>

</body>
</html>
