<dtml-call expr="REQUEST.set('temProposicao',hdn_cod_proposicao!='')">

<dtml-in expr="zsql.materia_obter_zsql(ncod_materia = hdn_cod_materia,
                                       tip_id_basica=lst_tip_id_basica,
                                       num_ident_basica = txt_num_ident_basica,
                                       ano_ident_basica = txt_ano_ident_basica,
                                       tip_natureza = 'P')">
  <dtml-call expr="REQUEST.set('erro', 1)">
  <dtml-let mensagem="'Matéria identificada por tipo, número e ano já existe no sistema. Não foi possível salvá-la.'" tipo_mensagem="'danger'">
    <dtml-var mensagem_emitir>
  </dtml-let>
</dtml-in>

<dtml-if temProposicao>
    <dtml-in expr="zsql.proposicao_obter_zsql(cod_proposicao=hdn_cod_proposicao)">
      <dtml-if expr="tip_mat_ou_doc!=_.int(lst_tip_id_basica)">
        <dtml-call expr="REQUEST.set('erro', 1)">
        <dtml-let mensagem="'O tipo da matéria não é compatível com o tipo de proposição. Corrija um dos campos e tente novamente.'" tipo_mensagem="'danger'">
          <dtml-var mensagem_emitir>
        </dtml-let>
      </dtml-if>
    </dtml-in>
</dtml-if>

<dtml-if hdn_cod_materia>
  <dtml-call expr="REQUEST.set('metodo', zsql.materia_atualizar_zsql)">
<dtml-else>
  <dtml-call expr="REQUEST.set('metodo', zsql.materia_incluir_zsql)">
</dtml-if>

<dtml-unless erro>
  <dtml-unless rad_tip_apresentacao>
    <dtml-call expr="REQUEST.set('rad_tip_apresentacao', '')">
  </dtml-unless>

  <dtml-unless rad_ind_polemica>
    <dtml-call expr="REQUEST.set('rad_ind_polemica', '')">
  </dtml-unless>

  <dtml-unless rad_ind_complementar>
    <dtml-call expr="REQUEST.set('rad_ind_complementar', '')">
  </dtml-unless>

  <dtml-try>
    <dtml-call expr="metodo(
        cod_materia              = hdn_cod_materia,
        tip_id_basica            = lst_tip_id_basica,
        num_ident_basica         = txt_num_ident_basica,
        ano_ident_basica         = txt_ano_ident_basica,
        num_protocolo            = txt_num_protocolo,
        dat_apresentacao         = pysc.data_converter_pysc(data=txt_dat_apresentacao),
        tip_apresentacao         = rad_tip_apresentacao,
        tip_quorum               = lst_tip_quorum,
        dat_publicacao           = pysc.data_converter_pysc(data=txt_dat_publicacao),
        des_veiculo_publicacao   = txt_des_veiculo_publicacao,
        tip_origem_externa       = lst_tip_origem_externa,
        num_origem_externa       = txt_num_origem_externa,
        ano_origem_externa       = txt_ano_origem_externa,
        dat_origem_externa       = pysc.data_converter_pysc(data=txt_dat_origem_externa),
        cod_local_origem_externa = lst_cod_local_origem_externa,
        nom_apelido              = txt_nom_apelido,
        num_dias_prazo           = txt_num_dias_prazo,
        dat_fim_prazo            = pysc.data_converter_pysc(data=txt_dat_fim_prazo),
        ind_tramitacao           = rad_ind_tramitacao,
        ind_polemica             = rad_ind_polemica,
        des_objeto               = txt_des_objeto,
        ind_complementar         = rad_ind_complementar,
        cod_regime_tramitacao    = lst_cod_regime_tramitacao,
        txt_ementa               = txa_txt_ementa,
        cod_assunto              = lst_cod_assunto,        
        txt_indexacao            = txa_txt_indexacao,
        txt_observacao           = txa_txt_observacao)">
  <dtml-except>
    <dtml-let mensagem="'Houve um erro no banco de dados.'" tipo_mensagem="'danger'">
      <dtml-var mensagem_emitir>
    </dtml-let>
  <dtml-else>

 <dtml-if expr="hdn_url[-1:]=='='">
     <dtml-in expr="zsql.materia_incluida_codigo_obter_zsql()">
        <dtml-call expr="REQUEST.set('hdn_url', hdn_url + str(cod_materia))">
        <dtml-call expr="REQUEST.set('codigo', str(cod_materia))">
        <dtml-call expr="REQUEST.set('hdn_cod_materia', str(cod_materia))">
     </dtml-in>

     <dtml-if hdn_cod_autor>
        <dtml-call expr="zsql.autoria_incluir_zsql(cod_autor = _.int(hdn_cod_autor), cod_materia = codigo, ind_primeiro_autor = 0)">
     </dtml-if>

     <dtml-if chk_cod_autor>
        <dtml-call expr="pysc.autoria_materia_salvar_pysc(autores=chk_cod_autor,materia=hdn_cod_materia)">
     </dtml-if>

     <dtml-if temProposicao>
        <dtml-in expr="zsql.usuario_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
           <dtml-if cod_usuario>
             <dtml-call expr="REQUEST.set('cod_usuario_corrente', int(cod_usuario))">
           </dtml-if>
        </dtml-in>
        <dtml-in expr="zsql.proposicao_obter_zsql(cod_proposicao=hdn_cod_proposicao)">
          <dtml-call expr="REQUEST.set('des_tipo_proposicao', des_tipo_proposicao)">
          <dtml-call expr="REQUEST.set('cod_documento',pysc.proposicao_calcular_checksum_pysc(cod_proposicao))">
          <dtml-call expr="REQUEST.set('hdn_hor_tramitacao', _.DateTime().strftime('%d/%m/%Y às %H:%M'))">
          <dtml-call expr="REQUEST.set('txt_tramitacao', 'Proposição Eletrônica ' + cod_documento + ' incorporada como matéria principal em ' + hdn_hor_tramitacao)">
          <dtml-comment>
            <dtml-call expr="zsql.autoria_incluir_zsql(cod_autor = cod_autor, cod_materia = codigo, ind_primeiro_autor = 0)">
          </dtml-comment>
        </dtml-in>
        <dtml-call expr="zsql.proposicao_registrar_recebimento_zsql(cod_proposicao = hdn_cod_proposicao,
                                                                 dat_recebimento = pysc.data_atual_iso_pysc(),
                                                                 cod_mat_ou_doc = _.int(hdn_cod_materia))">
        <dtml-call expr="pysc.proposicao_salvar_como_texto_integral_materia_pysc(hdn_cod_proposicao,hdn_cod_materia,0)">
        <dtml-call expr="REQUEST.set('hdn_dat_tramitacao', _.DateTime().strftime('%d/%m/%Y'))">
        <dtml-call expr="REQUEST.set('hdn_dat_encaminha', _.DateTime().strftime('%Y-%m-%d %H:%M:%S'))">
        <dtml-call expr="REQUEST.set('nom_unidade_origem', 'Protocolo Eletrônico')">
        <dtml-in expr="zsql.unidade_tramitacao_obter_zsql(nom_orgao=nom_unidade_origem)">
           <dtml-call expr="REQUEST.set('cod_unid_tram_local', cod_unid_tramitacao)">
        </dtml-in>
        <dtml-if expr="des_tipo_proposicao=='Indicação' or des_tipo_proposicao=='Moção' or des_tipo_proposicao=='Requerimento'">
          <dtml-call expr="REQUEST.set('nom_unidade_destino', 'Departamento Legislativo')">
        <dtml-else>
          <dtml-call expr="REQUEST.set('nom_unidade_destino', 'Assessoria Legislativa')">
        </dtml-if>
        <dtml-in expr="zsql.unidade_tramitacao_obter_zsql(nom_orgao=nom_unidade_destino)">
          <dtml-call expr="REQUEST.set('cod_unid_tram_dest', cod_unid_tramitacao)">
        </dtml-in>
        <dtml-call expr="REQUEST.set('sgl_status', 'PRT')">
        <dtml-in expr="zsql.status_tramitacao_obter_zsql(sgl_status=sgl_status)">
          <dtml-call expr="REQUEST.set('cod_status', cod_status)">
        </dtml-in>
        <dtml-call expr="zsql.tramitacao_incluir_zsql(cod_materia = codigo,
                                                   dat_tramitacao = pysc.data_converter_pysc(data=hdn_dat_tramitacao),
                                                   cod_unid_tram_local = cod_unid_tram_local,
                                                   cod_usuario_local = cod_usuario_corrente,
                                                   dat_encaminha = hdn_dat_encaminha,
                                                   cod_unid_tram_dest = cod_unid_tram_dest,
                                                   cod_status = cod_status,
                                                   ind_urgencia = 0,
                                                   txt_tramitacao = txt_tramitacao,
                                                   ind_ult_tramitacao = 1)">
        <dtml-call expr="pysc.envia_tramitacao_autor_pysc(cod_materia=codigo)">
        <dtml-call expr="pysc.envia_acomp_materia_pysc(cod_materia=codigo)">
     </dtml-if temProposicao>

  <dtml-if protAutor>
      <dtml-call expr="zsql.autoria_incluir_zsql(cod_autor = protAutor, cod_materia = codigo, ind_primeiro_autor = 0)">
  </dtml-if>

  <dtml-if expr="txt_num_protocolo!=''">
        <dtml-in expr="zsql.protocolo_obter_zsql(num_protocolo=txt_num_protocolo,ano_protocolo=txt_ano_ident_basica)">
           <dtml-if sequence-start>
             <dtml-call expr="REQUEST.set('cod_protocolo', cod_protocolo)">
           </dtml-if>
        </dtml-in>
        <dtml-if cod_protocolo>
            <dtml-call expr="REQUEST.set('id_protocolo', _.str(cod_protocolo)+'_protocolo.pdf')">
            <dtml-if "_.hasattr(sapl_documentos.protocolo,id_protocolo)">
               <dtml-call expr="pysc.protocolo_salvar_como_texto_integral_materia_pysc(cod_protocolo,codigo)">
            </dtml-if>
            <dtml-in expr="zsql.usuario_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
              <dtml-if cod_usuario>
                 <dtml-call expr="REQUEST.set('cod_usuario_corrente', int(cod_usuario))">
              </dtml-if>
            </dtml-in>
            <dtml-call expr="REQUEST.set('hdn_hor_tramitacao', _.DateTime().strftime('%d/%m/%Y às %H:%M'))">
            <dtml-call expr="REQUEST.set('txt_tramitacao', 'Matéria incorporada em ' + hdn_hor_tramitacao)">
            <dtml-call expr="REQUEST.set('hdn_dat_tramitacao', _.DateTime().strftime('%d/%m/%Y'))">
            <dtml-call expr="REQUEST.set('hdn_dat_encaminha', _.DateTime().strftime('%Y-%m-%d %H:%M:%S'))">
            <dtml-call expr="REQUEST.set('nom_unidade_origem', 'Protocolo')">
            <dtml-in expr="zsql.unidade_tramitacao_obter_zsql(nom_orgao=nom_unidade_origem)">
               <dtml-call expr="REQUEST.set('cod_unid_tram_local', cod_unid_tramitacao)">
            </dtml-in>
            <dtml-call expr="REQUEST.set('nom_unidade_destino', 'Departamento Legislativo')">
            <dtml-in expr="zsql.unidade_tramitacao_obter_zsql(nom_orgao=nom_unidade_destino)">
               <dtml-call expr="REQUEST.set('cod_unid_tram_dest', cod_unid_tramitacao)">
            </dtml-in>
            <dtml-call expr="REQUEST.set('sgl_status', 'PRT')">
            <dtml-in expr="zsql.status_tramitacao_obter_zsql(sgl_status=sgl_status)">
               <dtml-call expr="REQUEST.set('cod_status', cod_status)">
            </dtml-in>
            <dtml-call expr="zsql.tramitacao_incluir_zsql(cod_materia = codigo,
                                                   dat_tramitacao = pysc.data_converter_pysc(data=hdn_dat_tramitacao),
                                                   cod_unid_tram_local = cod_unid_tram_local,
                                                   cod_usuario_local = cod_usuario_corrente,
                                                   dat_encaminha = hdn_dat_encaminha,
                                                   cod_unid_tram_dest = cod_unid_tram_dest,
                                                   cod_status = cod_status,
                                                   ind_urgencia = 0,
                                                   txt_tramitacao = txt_tramitacao,
                                                   ind_ult_tramitacao = 1)">
            <dtml-call expr="pysc.atualiza_indicador_tramitacao_materia_pysc(cod_materia=codigo, cod_status=cod_status)">
            <dtml-call expr="pysc.envia_tramitacao_autor_pysc(cod_materia=codigo)">
            <dtml-call expr="pysc.envia_acomp_materia_pysc(cod_materia=codigo)">
            <dtml-in expr="zsql.tramitacao_incluida_codigo_obter_zsql()">
               <dtml-call expr="REQUEST.set('hdn_cod_tramitacao', int(cod_tramitacao))">
            </dtml-in>
            <dtml-call expr="relatorios.pdf_tramitacao_preparar_pysc(hdn_cod_tramitacao=hdn_cod_tramitacao,hdn_url=hdn_url)">
        </dtml-if>
  </dtml-if>
 </dtml-if>

  <dtml-unless temProposicao>
   <dtml-unless cod_protocolo>
    <dtml-call expr="REQUEST.set('erro', 0)">
    <dtml-call expr="REQUEST.set('existe_arquivo', 0)">
    <dtml-if file_nom_arquivo>
      <dtml-call expr="REQUEST.set('id_documento', _.str(hdn_cod_materia)+'_texto_integral.pdf')">
      <dtml-if expr="_.hasattr(sapl_documentos.materia,id_documento)">
        <dtml-let documento="_.getattr(sapl_documentos.materia,id_documento) ">
          <dtml-call expr="REQUEST.set('existe_arquivo', 1)">
          <dtml-try>
              <dtml-call "documento.manage_upload(file=file_nom_arquivo)">
          <dtml-except>
            <dtml-call expr="REQUEST.set('erro', 1)">
            <dtml-let mensagem="'Ocorreu erro ao tentar salvar o texto integral'+hdn_cod_materia" tipo_mensagem="'danger'">
               <dtml-var mensagem_emitir>
            </dtml-let>
          </dtml-try>
        </dtml-let>
      </dtml-if>
    </dtml-if>
    <dtml-if expr="not existe_arquivo">
      <dtml-call expr="REQUEST.set('erro',0)">
      <dtml-try>
          <dtml-call expr="sapl_documentos.materia.manage_addFile(id=id_documento,file=file_nom_arquivo)">
      <dtml-except> 
      </dtml-try>
    </dtml-if>
    <dtml-call expr="REQUEST.set('existe_redacao', 0)">
    <dtml-if file_redacao>
      <dtml-call expr="REQUEST.set('id_redacao', _.str(hdn_cod_materia)+'_redacao_final.pdf')">
      <dtml-if expr="_.hasattr(sapl_documentos.materia,id_redacao)">
        <dtml-let documento="_.getattr(sapl_documentos.materia,id_redacao) ">
          <dtml-call expr="REQUEST.set('existe_redacao', 1)">
          <dtml-try>
              <dtml-call "documento.manage_upload(file=file_redacao)">
          <dtml-except>
            <dtml-call expr="REQUEST.set('erro', 1)">
            <dtml-let mensagem="'Ocorreu erro ao tentar salvar a redação final'+hdn_cod_materia" tipo_mensagem="'danger'">
               <dtml-var mensagem_emitir>
            </dtml-let>
          </dtml-try>
        </dtml-let>
      </dtml-if>
    </dtml-if>
    <dtml-if expr="not existe_redacao">
      <dtml-call expr="REQUEST.set('erro',0)">
      <dtml-try>
          <dtml-call expr="sapl_documentos.materia.manage_addFile(id=id_redacao,file=file_redacao)">
      <dtml-except> 
      </dtml-try>
    </dtml-if>
   </dtml-unless>
  </dtml-unless>

 <dtml-if erro_autor>
   <dtml-let mensagem="'Matéria salva com sucesso! Mas não foi possível salvar os dados da autoria. Faça inclusão dos autores manualmente.'" tipo_mensagem="'warning'">
     <dtml-var mensagem_emitir>
   </dtml-let>
 <dtml-else>
   <dtml-call expr="sapl_documentos.materia.Catalog.atualizarCatalogo(hdn_cod_materia)">
   <dtml-if expr="txt_num_protocolo and txt_num_protocolo!=''">
       <dtml-in expr="zsql.protocolo_obter_zsql(num_protocolo=txt_num_protocolo,ano_protocolo=txt_ano_ident_basica)">
        <dtml-if cod_protocolo>
          <dtml-call expr="REQUEST.set('cod_protocolo', cod_protocolo)">
          <dtml-let id_documento="_.str(cod_protocolo)+'_protocolo.pdf'">
            <dtml-if "_.hasattr(sapl_documentos.protocolo,id_documento)">
              <dtml-call expr="pysc.protocolo_salvar_como_texto_integral_materia_pysc(cod_protocolo,hdn_cod_materia,0)">
            </dtml-if>
          </dtml-let>
        </dtml-if>
      </dtml-in>
      <dtml-if cod_protocolo>
        <dtml-let mensagem="'Matéria salva com sucesso!'" cod_mat="hdn_cod_materia" cod_protocolo="cod_protocolo" url="hdn_url" tipo_mensagem="'success'">
          <dtml-var mensagem_emitir>
        </dtml-let>
      <dtml-else>
        <dtml-let mensagem="'Matéria salva com sucesso!'" tipo_mensagem="'success'" cod_mat="hdn_cod_materia" url="hdn_url" >
          <dtml-var mensagem_emitir>
        </dtml-let>
      </dtml-if>
   <dtml-else>
      <dtml-let mensagem="'Matéria salva com sucesso!'" tipo_mensagem="'success'" cod_mat="hdn_cod_materia" url="hdn_url" >
        <dtml-var mensagem_emitir>
      </dtml-let>
      <dtml-if temProposicao>
        <dtml-call expr="modelo_proposicao.proposicao_autuar(cod_proposicao=hdn_cod_proposicao)">      
      </dtml-if>
   </dtml-if>
 </dtml-if>
 </dtml-try>
</dtml-unless>

<dtml-comment>LOG DE AUDITORIA</dtml-comment>
<dtml-if dbcon_logs>
  <dtml-call expr="REQUEST.set('metodo1', _.string.split(str(metodo),'/')[-1])">
  <dtml-call expr="REQUEST.set('metodo1', _.string.split(str(metodo1),' at ')[-1])">
  <dtml-call expr="REQUEST.set('metodo1', _.string.split(str(metodo1),'>')[0])">
  <dtml-call expr="zsql.logs_registrar_zsql(
            usuario      = REQUEST['AUTHENTICATED_USER'].getUserName(), 
            data         = DateTime().strftime('%Y-%m-%d %H:%M:%S'),
            modulo       = _.string.split(_['REQUEST']['URL1'],'/')[-1],
            metodo       = metodo1,
            IP           = pysc.get_ip(),
            dados        = REQUEST.form.items(),
            cod_registro = hdn_cod_materia)"> 
</dtml-if>
